================================================================================
    TEAM SHANGHAI DREAM EQUINOX : DirectGraphics3D Project Overview
================================================================================
ReadMe.txt 文件对于类中的一些函数参数进行解释和备注

// DirectGraphics3D主要完成D3D相关3D顶点图形绘制

// 关于Direct3D相关接口函数作用描述

//----------------------------------------------------------------------------------------------------------------------------------------------------------------------
// 名称: HRESULT IDirect3DDevice9::CreateVertexBuffer(UINT Length, DWORD Usage, DWORD FVF, D3DPOOL Pool, IDirect3DVertexBuffer9** ppVertexBuffer, HANDLE* pSharedHandle)
// 作用: 创建顶点缓存
// 参数1: UINT Length 为缓存分配的字节数(n*sizeof(Vertex))
// 参数2: DWORD Usage 指定关于缓存的附加属性(0: 无附加属性)
//        D3DUSAGE_DYNAMIC 缓存设置为动态缓存
//        D3DUSAGE_POINTS 缓存用于存储点图元(粒子系统)
//        D3DUSAGE_SOFTWAREPROCESSING 软件顶点运算方式
//        D3DUSAGE_WRITEONLY 缓存设置为只写模式(不可读取)
// 参数3: DWORD FVF 存储在顶点缓存中的灵活顶点格式
// 参数4: D3DPOOL Pool 容纳缓存的内存池
//        D3DPOOL_DEFAULT 默认格式 指示Direct3D将资源存入最合适的区域.可能是显存,AGP存储区或系统存储区.Reset之前需要销毁或释放,Reset之后需要重新初始化资源.
//        D3DPOOL_MANAGE 托管格式 指示Direct3D托管管理内存池.资源会在系统存储区保留备份,必要时Direct3D会自动更新到显存.
//        D3DPOOL_SYSTEMMEM 系统格式 指示Direct3D将资源放入系统内存.
//        D3DPOOL_SCRATCH 系统存储区 设备无法访问类型中的资源.
// 参数5: IDirect3DVertexBuffer9** ppVertexBuffer 顶点缓存对象接口指针
// 参数6: HANDLE* pSharedHandle 不使用,保留
// 返回: HRESULT(初始化状态:成功:S_OK,失败:E_FAIL)
//----------------------------------------------------------------------------------------------------------------------------------------------------------------------

//--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
// 名称: HRESULT IDirect3DDevice9::CreateIndexBuffer(UINT Length, DWORD Usage, D3DFORMAT Format, D3DPOOL Pool, IDirect3DIndexBuffer9** ppIndexBuffer, HANDLE* pSharedHandle)
// 作用: 创建索引缓存
// 参数1: UINT Length 为缓存分配的字节数(n*sizeof(Vertex))
// 参数2: DWORD Usage 指定关于缓存的附加属性(0: 无附加属性)
//        D3DUSAGE_DYNAMIC 缓存设置为动态缓存
//        D3DUSAGE_POINTS 缓存用于存储点图元(粒子系统)
//        D3DUSAGE_SOFTWAREPROCESSING 软件顶点运算方式
//        D3DUSAGE_WRITEONLY 缓存设置为只写模式(不可读取)
// 参数3: DWORD FVF 存储在顶点缓存中的灵活顶点格式
// 参数4: D3DPOOL Pool 容纳缓存的内存池
//        D3DPOOL_DEFAULT 默认格式 指示Direct3D将资源存入最合适的区域.可能是显存,AGP存储区或系统存储区.Reset之前需要销毁或释放,Reset之后需要重新初始化资源.
//        D3DPOOL_MANAGE 托管格式 指示Direct3D托管管理内存池.资源会在系统存储区保留备份,必要时Direct3D会自动更新到显存.
//        D3DPOOL_SYSTEMMEM 系统格式 指示Direct3D将资源放入系统内存.
//        D3DPOOL_SCRATCH 系统存储区 设备无法访问类型中的资源.
// 参数5: IDirect3DIndexBuffer9** ppIndexBuffer 索引缓存对象接口指针
// 参数6: HANDLE* pSharedHandle 不使用,保留
// 返回: HRESULT(初始化状态:成功:S_OK,失败:E_FAIL)
//--------------------------------------------------------------------------------------------------------------------------------------------------------------------------

//-----------------------------------------------------------------------------------------------------------------
// 静态缓存:
//			未标记D3DUSAGE_DYNAMIC顶点格式的为静态缓存.静态缓存一般被放置在显存中,以保证存储于其中的数据得到最高效的处理.
//			然而,静态缓存是以牺牲对静态缓存的读写操作的速度为代价的,这是因为访问显存的速度本身就很慢.基于上述原因,利用静态
//			缓存来存储静态数据(那些不需要经常修改或者访问的数据).静态缓存必须在应用程序初始化时用几何体的数据进行填充.
//
// 动态缓存:
//			标记D3DUSAGE_DYNAMIC顶点格式的为动态缓存.动态缓存一般放置在AGP存储区,其内容可以被迅速更新.动态缓存中的数据的
//			处理速度不想静态缓存那样快,这是因为在绘制数据前必须传输到显存中.但动态缓存的突出优点是更新速度相当快.如果需要
//			频繁更新缓存中的内容,该缓存应该设置为动态的.例子系统就是使用动态缓存的一个例子,因为粒子都是活动的,所以需要对每
//			帧图像中的例子的集合布局进行更新.
//-----------------------------------------------------------------------------------------------------------------